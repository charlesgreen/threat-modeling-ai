extract_resources_task:
  description: >
    You are given GCP metadata and architecture information from documents and diagrams.
    Your goal is to analyze this combined data and extract a structured list of system components,
    services, data flows, and trust boundaries across the cloud environment.

    Focus on identifying unique services, cloud resources, and infrastructure nodes that
    would be relevant for a threat model. Use knowledge of GCP services to clarify ambiguous items.

    GCP Metadata:
    {gcp_metadata}

    Architecture Summary:
    {architecture_summary}

    Diagram Insights:
    {diagram_insights}

  expected_output: >
    A JSON list of identified components. Each entry should include:
    - component (name or label from metadata or diagram)
    - service_type (e.g. Cloud Run, Pub/Sub, GCS)
    - role (e.g. frontend, backend, message queue, identity provider)
    - notes (if applicable)

    Format:
    [
      {
        "component": "web-api-service",
        "service_type": "Cloud Run",
        "role": "public API handler",
        "notes": "Called by external clients through HTTPS"
      },
      ...
    ]

stride_threat_modeling_task:
  description: >
    Perform STRIDE threat modeling on each component from the extracted architecture.
    Use the component type, role, and cloud context to infer possible threat vectors
    across Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service,
    and Elevation of Privilege.

    Each component should be assessed independently and returned with associated threats.

    Component List:
    {component_list}

  expected_output: >
    A JSON list of threat entries. Each entry should include:
    - threat
    - asset
    - category (STRIDE)
    - likelihood (Low/Medium/High)
    - impact (Minor/Moderate/Severe)
    - mitigation (actionable suggestion)

    Format:
    [
      {
        "threat": "Token forgery attack",
        "asset": "Cloud Run: web-api-service",
        "category": "Spoofing",
        "likelihood": "High",
        "impact": "Severe",
        "mitigation": "Use signed JWT tokens with audience validation"
      },
      ...
    ]

export_risks_task:
  description: >
    Convert the list of structured threat entries into a CSV string suitable
    for review and execution by a penetration testing team.

    Ensure the output is clean, well-formatted, and retains all key fields
    needed for testers to act on.

    Threat List:
    {threat_list}

  expected_output: >
    A CSV file in string format containing the following headers:
    threat, asset, category, likelihood, impact, mitigation

    The output should be raw CSV text ready to be saved to a file or sent downstream.
